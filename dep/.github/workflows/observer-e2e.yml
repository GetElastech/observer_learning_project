name: Observer E2E

on:
  push:
    branches:
      - master
      - 'auto-cadence-upgrade/**'
      - staging
      - trying
      - 'feature/**'
      - 'v[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master
      - 'auto-cadence-upgrade/**'
      - 'feature/**'
      - 'v[0-9]+.[0-9]+'

jobs:
  golangci:
    name: Lint1.45
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Download golangci-lint
      run: bash -c 'curl -L https://github.com/golangci/golangci-lint/releases/download/v1.45.0/golangci-lint-1.45.0-linux-amd64.tar.gz | tar -xzC /opt'
    - name: Run golangci-lint
      run: bash -c '(/opt/golangci-lint-1.45.0-linux-amd64/golangci-lint run | sort >/tmp/lint.txt) && cat /tmp/lint.txt && (md5sum </tmp/lint.txt >.github/workflows/lintmd5.txt) && md5sum -c .github/workflows/lintmd5.txt </tmp/lint.txt'

  integration-test:
    name: Integration Tests
    strategy:
      fail-fast: false
      matrix:
        go-version:
#          - 1.16
          - 1.17
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version}}
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Build relic
      run: make crypto_setup_gopath
    - name: Docker build
      run: make docker-build-flow
    - name: Run Observer End To End
      run: bash -c 'cd integration/localnet/ && make -e OBSERVER=1 init && make start && (docker ps | grep observer) && make stop'
    - name: Run tests (Bors)
      if: github.actor == 'bors[bot]'
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 15
        max_attempts: 2
        command: make ci-integration
  flow-grpc-test:
    name: Client Tests
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - 1.16
#          - 1.17
    runs-on: ubuntu-latest
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version}}
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Build relic
      run: make crypto_setup_gopath
    - name: Docker build
      run: make docker-build-flow
    - name: Install Flow Client
      run: sh -ci "$(curl -fsSL https://storage.googleapis.com/flow-cli/install.sh)" && mv ~/.local/bin/flow /tmp
    - name: Set up Localnet
      run: bash -c 'cd integration/localnet/ && make -e OBSERVER=1 init && make start'
    - name: Wait 20 seconds to start
      run: sleep 20
    - name: Get Latest Blocks
      run: /tmp/flow -f integration/localnet/flow-localnet.json -n observer blocks get latest
    - name: Get Version
      run: /tmp/flow -f integration/localnet/flow-localnet.json -n observer version
    - name: Get Status
      run: /tmp/flow -f integration/localnet/flow-localnet.json -n observer status
    - name: Stop localnet
      run: bash -c 'cd integration/localnet/ && make stop'
    - name: Run tests (Bors)
      if: github.actor == 'bors[bot]'
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 15
        max_attempts: 2
        command: make ci-integration
